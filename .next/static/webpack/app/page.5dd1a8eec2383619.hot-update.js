"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./constants/index.js":
/*!****************************!*\
  !*** ./constants/index.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INVIEWSLIDE: () => (/* binding */ INVIEWSLIDE),\n/* harmony export */   TYPEWRITER: () => (/* binding */ TYPEWRITER)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_simple_typewriter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-simple-typewriter */ \"(app-pages-browser)/./node_modules/react-simple-typewriter/dist/index.js\");\n\n\nconst TYPEWRITER = (param)=>{\n    let { words, typeSpeed, cursor, cursorStyle } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_simple_typewriter__WEBPACK_IMPORTED_MODULE_1__.Typewriter, {\n        words: words,\n        loop: 1,\n        typeSpeed: typeSpeed,\n        cursor: cursor,\n        cursorStyle: cursorStyle\n    }, void 0, false, {\n        fileName: \"/Users/aashi/portfolio/constants/index.js\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, undefined);\n};\n_c = TYPEWRITER;\nconst INVIEWSLIDE = function() {\n    let startX = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : -100, delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.5;\n    return {\n        whileInView: {\n            opacity: 1,\n            x: 0\n        },\n        initial: {\n            opacity: 0,\n            x: startX\n        },\n        transition: {\n            duration: 1,\n            delay: delay\n        }\n    };\n};\n_c1 = INVIEWSLIDE;\nvar _c, _c1;\n$RefreshReg$(_c, \"TYPEWRITER\");\n$RefreshReg$(_c1, \"INVIEWSLIDE\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbnN0YW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRDtBQUU5QyxNQUFNQyxhQUFhO1FBQUMsRUFBRUMsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBRUMsV0FBVyxFQUFFO0lBQ2xFLHFCQUNFLDhEQUFDTCwrREFBVUE7UUFDVEUsT0FBT0E7UUFDUEksTUFBTTtRQUNOSCxXQUFXQTtRQUNYQyxRQUFRQTtRQUNSQyxhQUFhQTs7Ozs7O0FBR25CLEVBQUU7S0FWV0o7QUFZTixNQUFNTSxjQUFjO1FBQUNDLDBFQUFTLENBQUMsS0FBS0MseUVBQVE7V0FBUztRQUN4REMsYUFBYTtZQUFFQyxTQUFTO1lBQUdDLEdBQUc7UUFBRTtRQUNoQ0MsU0FBUztZQUFFRixTQUFTO1lBQUdDLEdBQUdKO1FBQU87UUFDakNNLFlBQVk7WUFBRUMsVUFBVTtZQUFHTixPQUFPQTtRQUFNO0lBQzFDO0VBQUc7TUFKUUYiLCJzb3VyY2VzIjpbIi9Vc2Vycy9hYXNoaS9wb3J0Zm9saW8vY29uc3RhbnRzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGV3cml0ZXIgfSBmcm9tICdyZWFjdC1zaW1wbGUtdHlwZXdyaXRlcic7XG5cbmV4cG9ydCBjb25zdCBUWVBFV1JJVEVSID0gKHsgd29yZHMsIHR5cGVTcGVlZCwgY3Vyc29yLCBjdXJzb3JTdHlsZSB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPFR5cGV3cml0ZXJcbiAgICAgIHdvcmRzPXt3b3Jkc31cbiAgICAgIGxvb3A9ezF9XG4gICAgICB0eXBlU3BlZWQ9e3R5cGVTcGVlZH1cbiAgICAgIGN1cnNvcj17Y3Vyc29yfVxuICAgICAgY3Vyc29yU3R5bGU9e2N1cnNvclN0eWxlfVxuICAgIC8+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgSU5WSUVXU0xJREUgPSAoc3RhcnRYID0gLTEwMCwgZGVsYXkgPSAwLjUpID0+ICh7XG4gICAgd2hpbGVJblZpZXc6IHsgb3BhY2l0eTogMSwgeDogMCB9LFxuICAgIGluaXRpYWw6IHsgb3BhY2l0eTogMCwgeDogc3RhcnRYIH0sXG4gICAgdHJhbnNpdGlvbjogeyBkdXJhdGlvbjogMSwgZGVsYXk6IGRlbGF5IH0sXG4gIH0pOyJdLCJuYW1lcyI6WyJUeXBld3JpdGVyIiwiVFlQRVdSSVRFUiIsIndvcmRzIiwidHlwZVNwZWVkIiwiY3Vyc29yIiwiY3Vyc29yU3R5bGUiLCJsb29wIiwiSU5WSUVXU0xJREUiLCJzdGFydFgiLCJkZWxheSIsIndoaWxlSW5WaWV3Iiwib3BhY2l0eSIsIngiLCJpbml0aWFsIiwidHJhbnNpdGlvbiIsImR1cmF0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./constants/index.js\n"));

/***/ })

});